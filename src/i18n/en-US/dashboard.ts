export default {
  myCollection: 'my collection',
  auction: 'auction',
  create: 'create',
  connectToYourWallet: 'Connect wallet',
  walletConnect: 'WalletConnect',
  metaMask: 'MetaMask',
  tokenBalance: '{amount} {token}',
  buyToken: 'Buy {token}',
  editProfileTerm: 'Edit profile',
  balance: 'Balance',
  algop: '$ALGOP',
  selectAlgoP: 'Select an AlgoPainter',
  wrong: 'Wrong Network',
  migrate: 'Migrate to a Binance SmartChain',
  commingSoon: 'For now, there are no auctions available. Stay tuned they will soon show up here!',
  sellerSoon: 'Nothing around here yet, but we will see the top sellers here soon!',
  buyerSoon: 'Nothing around here yet, but we will see the top buyers here soon!',
  header: {
    auctionNotificator: {
      pirsBtn: '({pirsCounter}) PIRS',
      bidBackBtn: '({bidBackCounter}) BidBack',
    },
  },
  homePage: {
    title: 'Gallery',
    publicTitle: 'Public profile',
    editAccount: 'Edit account',
    sendNewArt: 'Send New Art',
    items: 'Items',
    buyAlgop: 'Buy $ALGOP  ',
    myGallery: 'My Gallery',
    btnName: {},
    pirsVal: '{creators} creators / {investors} investors',
    gallery: 'Gallery',
    pirs: 'PIRS',
    bid: 'BidBack',
    personalNoBid: 'Oh üòî nothing around here? How do you want to be a big name in the art world? ',
    sell: 'SELL',
    latestBids: 'Latest bids',
    seeAllBids: 'See all bids',
    seeLess: 'See less',
    publicNoBids: 'This user did not place a bid yet',
    personalNoBids: 'You never placed a bid',
    publicNoItems: 'This user does not have items yet',
    noItemsForSalePublic1: 'No artwork for sale here yet.',
    noItemsForSalePublic2: '(Maybe the artist is looking for a great inspiration üßê)',
    noItemPublic: "Hey stalker, there's no art around here yet.",
    btnBioFalse: '...Read more',
    btnBioTrue: 'Show less',
    collectiblesGallery: 'Collection',
    exploreAuctions: 'Explore Auctions',
    gwei: 'Gwei',
    expressions: 'Expressions',
    monero: 'Monero',
    filter: 'filter',
    colon: ':',
    symbol: '#',
    stakeAlgo: 'Stake ALGOP',
    algop: '$ALGOP:',
    earned: 'BNB Earned',
    stakedAlgop: 'ALGOP staked',
    havest: 'Withdraw',
    unstakeAlgo: 'Unstake ALGOP',
    getYourArt: 'Get here your art',
  },
  newPainting: {
    title: 'New Painting',
    create: 'Create Your Art',
    typeAText: 'Give me an inspirational text',
    paintOnWall: 'Hang the paint on Wall?',
    randomColors: 'Apply random color inversion:',
    colorInversionProbability: 'Define the color inversion probability',
    yourInspiration: 'Inspiration',
    generatePainting: 'Generate Painting',
    yesLabel: 'Yes',
    noLabel: 'No',
    requireText: 'All fields are mandatory',
    inspirations: 'inspirations',
    exhibition: 'Exhibition (you can change it later)',
    technique: 'Technique',
  },
  myPaint: {
    title: 'My¬†Amazing¬†Paint',
    description: 'Description:',
    sale: 'Put¬†on¬†sale',
    bidBack: 'BidBack',
    creator: 'Creator Royalties:',
    investors: 'Investors Royalties:',
    buttonRegister: 'Register',
    buttonReload: 'Reload',
    trace: '/',
    percent: '%',
  },
  auctions: {
    title: 'Auctions',
    hotBids: 'Auctions',
    highestBid: 'Highest bid {highestBid}',
    minimumBid: 'Minimum bid {highestBid}',
    currentBalance: 'Your Balance:',

    topSellers: {
      top: 'Top {sellers}',
      sellers: 'Sellers',
    },
    explore: 'Explore',
    otherFilter: 'Other Filter',
    info: 'Info',
    bids: 'Bids',
    history: 'History',
    stakedAlgop: 'ALGOP Staked',
    harvest: 'Harvest',
    unstakeAlgo: 'Unstake ALGOP',
    plusSymbol: '+',
    minusSymbol: '-',
    claim: 'Claim',
    algop: '$ALGOP:',
    BNBearned: 'BNB Earned',
    auctionController: 'Auction Controller',
    pirs: 'PIRS',
    bidBack: 'BidBack',
    bidBackBtn: 'BidBack Share',
    bidBackModal: {
      title: 'BidBack share',
      lastBid: 'Last Bid',
      auctionRate: 'BidBack Rate',
      auctionRatePlaceholder: '0.00%',
      returnBtn: 'Return',
      lastBidValue: '{highestBid} {auctionCurrency}',
    },
    bidBackModalSimulator: {
      title: 'Simulator',
      lastBid: 'Last Bid',
      auctionRate: 'BidBack Rate',
      auctionRatePlaceholder: '0.00%',
      lastBidValue: '{highestBid} {auctionCurrency}',
      stakeCheckbox: 'I am aware that {amount} $ALGOP will be summed to my current total stake.',
      returnBtn: 'Return',
      interactionBtn: 'Stake',
      algop: '$ALGOP',
      rules: {
        noMoney: 'You cannot stake more than you have in you wallet.',
        moreThanZero: 'You must stake an amount bigger than zero.',
        auctionEnded: 'This auction is over. You can no longer stake.',
        stakeCheckboxNotChecked: 'You must check the box bellow.',
      },
    },
    pirsModal: {
      title: 'PIRS share',
      auctionRate: 'Pirs Rate',
      auctionRatePlaceholder: '0.00%',
      lastBid: 'Last Bid',
      lastBidValue: '{highestBid} {auctionCurrency}',
      returnBtn: 'Return',
    },
    pirsModalSimulator: {
      title: 'Simulator',
      lastBid: 'Last Bid',
      auctionRate: 'Pirs Rate',
      auctionRatePlaceholder: '0.00%',
      lastBidValue: '{highestBid} {auctionCurrency}',
      stakeCheckbox: 'I am aware that {amount} $ALGOP will be summed to my current total stake.',
      returnBtn: 'Return',
      interactionBtn: 'Stake',
      algop: '$ALGOP',
      rules: {
        noMoney: 'You cannot stake more than you have in you wallet.',
        moreThanZero: 'You must stake an amount bigger than zero.',
        auctionEnded: 'This auction is over. You can no longer stake.',
      },
    },
  },
  sellYourArt: {
    title: 'Sell your Art',
    createAuction: 'Create auction',
    deleteAuction: 'Delete auction',
    minimumPrice: 'Minimum price',
    setAMinimumPrice: 'You must set a minimum bid to the auction.',
    setAnEndDate: 'You must set an end date to the auction.',
    setAnEndTime: 'You must set an end time to the auction.',
    minimumBidBackRate: 'The bidBack rate must be at least 1%',
    maximumBidBackRate: 'The bidBack rate cannot be bigger than 30%',
    minimumPIRSRate: 'The PIRS rate must be at least 1%',
    maximumPIRSRate: 'The PIRS rate cannot be bigger than 30%',
    acknowledgeTerm: 'You must acknowledge the term above.',
    feeMessage: 'Listing is free, but if the NFT is sold, a fee of {auctionFeePercentage} will be deducted from the final amount.',
    pirsMessage: 'I am aware that I can only set PIRS in the first auction for this artwork.',
    readOnlyField: 'This is a read only field.',
    bidBack: 'BidBack %',
    pirs: 'PIRS %',
    creatorRoyalties: 'Creator Royalties %',
    endDate: 'End date',
    endTime: 'End time',
    selectCoin: 'Select a coin',
    creatingAuction: 'Creating auction',
    auctionCreated: 'Auction created successfully',
    // eslint-disable-next-line max-len
    bidBackTooltip: 'A user can create an auction and set a BidBack percentage. It will incentivize all the users to send bids because all the bidders will join the BidBack pool and receive an artwork sell price percentage.',
    // eslint-disable-next-line max-len
    pirsTooltip: 'The PIRS (Perpetual Inclusive Royalty System) will bring attention to your artwork because all the owners will receive a royalty incentivate to buy and sell. Only the first owner can set the PIRS percentage. The following owners will only receive the corresponding value.',
    creatorTooltip: 'This is the PIRS percentage (i.e., the royalty) that the artist, who created the collection, will receive.',
    statuses: {
      contractApprove: 'Approve contract',
      checkingContractApproved: 'Verifying if the contract is already approved',
      approveContractInput: 'Interact with your wallet to approve the auction smart contract',
      approveContractConfirmation: 'Awaiting for the blockchain confirmation',
      approveContractError: 'An error occurred while trying to approve the auction smart contract',
      approveContractAvailable: 'Smart contract approved',
      createAuction: 'Create auction',
      createBidBack: 'Set BidBack',
      createpirs: 'Set PIRS',
      createAuctionInput: 'Interact with your wallet to create the auction',
      createAuctionConfirmation: 'Awaiting for the blockchain confirmation',
      createAuctionError: 'An error occurred while trying to create the auction',
      createAuctionCreated: 'Auction created successfully',
      bidBackAwaitingInput: 'Interact with your wallet to set the BidBack',
      bidBackAwaitingConfirmation: 'Awaiting for the blockchain confirmation',
      bidBackError: 'An error occurred while trying to set the BidBack',
      bidBackCompleted: 'BidBack setted successfully',
      pirsAwaitingInput: 'Interact with your wallet to set the PIRS',
      pirsAwaitingConfirmation: 'Awaiting for the blockchain confirmation',
      pirsError: 'An error occurred while trying to set the PIRS',
      pirsCompleted: 'PIRS setted successfully',
    },
    errorHandling: {
      invalidTimeStamp: 'The auction must have a minimum end time of 1 day and maximum of 30 days',
      default: 'It was not possible to create the auction.',
    },
  },
  auctionPage: {
    title: 'Auction',
    auction: 'Auction',
    auctionDistribution: 'Auction Distribution',
    saleNumber: 'Sale {saleNumber} of {totalSales}',
    highestBidBy: 'Highest bid by {highestBidBy}',
    auctionRates: 'Rates: {bidBackRate}% BidBack / {investorPirsRate}% Investor PIRS / {creatorPirsRate}% Creator Royalties',
    pirsDestination: '{pirs} of sales will go to {role}',
    previousBid: 'Offered {bidPrice} for {bidAtInDays} days ago',
    previousBidBy: 'by {name}',
    noBids: 'There are no bids yet',
    noPreviousOwner: 'This art has no previous owner',
    owner: 'Owner',
    previousOwner: 'Previous Owner',
    previousOwners: 'Previous Owners',
    creator: 'Creator',
    creators: 'Creators',
    collection: 'Collection',
    investors: 'Investors',
    liked: 'Liked!',
    placeABid: 'Place a bid',
    btnView: 'View Art',
    symbol: '#',
    highestBid: 'Highest bid',
    minimumBid: 'Minimum bid',
    amount: 'Amount',
    placingBid: 'Placing bid',
    newBidDescription: 'You are about to place a bid for {title}.',
    yourBalance: 'Your balance',
    serviceFee: 'Service fee',
    netAmount: 'You will pay',
    okButton: 'Ok',
    tryAgain: 'Try again',
    claimBtn: 'Claim: {amount} {coin}',
    endingAuction: 'End auction',
    youWin: 'You are the master of the auction. Congratulations!',
    removeBids: "Don't you cry no more",
    claimBid: 'Claim your bid',
    auctionEnded: 'Auction ended {endDate}',
    auctionRemainingTime: 'Auction ends in',
    deletingAuction: 'Deleting auction',
    returnNft: 'Get your NFT back',
    cancelAuction: 'Cancel auction',
    newBidModal: {
      rules: {
        noFunds: 'Insufficient funds. Check your wallet.',
        minimumBid: 'Your bid must be {coinSymbol} {auctionMinimumBid} or more.',
        highestBid: 'Your bid value must be higher than the highest bid {coinSymbol} {minimumValue}',
      },
    },
    statuses: {
      allowance: 'YOU ARE SO FANCY!',
      error: 'ERROR',
      checkingAllowance: 'Checking if has enough allowance',
      allowanceInput: 'Interact with your wallet to increase contract allowance',
      allowanceConfirmation: 'Awaiting for the blockchain confirmation',
      allowanceError: 'An error occurred while trying to increase the contract allowance',
      allowanceAvailable: 'You have enough balance available.',
      placeBid: 'Place bid',
      placeBidInput: 'Interact with your wallet to place the bid',
      placeBidConfirmation: 'Awaiting for the blockchain confirmation',
      placeBidError: 'An error occurred while trying to place a bid.',
      placeBidAvailable: 'Bid placed successfully',
    },
    endAuctionStatuses: {
      awaitingInput: 'Approve your victory in your wallet to receive your new masterpiece.',
      error: "I don't understand what's going on. To receive the auction prize, you need to approve it in your wallet.",
      awaitingConfirmation: 'Awaiting for the blockchain confirmation',
      auctionEnded: 'Art received successfully. You rocked!',
    },
    removeBidStatuses: {
      awaitingInput: 'Approve in your wallet to remove the bid',
      error: 'The removal of the bid could not be completed. To remove the bid, approve it in your wallet.',
      awaitingConfirmation: 'Awaiting for the blockchain confirmation',
      bidRemove: 'Bid removed successfully. See you at the next auction?',
    },
    bidClaimStatus: {
      awaitingInput: 'Interact with your wallet to claim your bid',
      error: 'An error occurred while trying to claim your bid',
      awaitingConfirmation: 'Awaiting for the blockchain confirmation',
      bidClaim: 'claim bid successfully',
    },
    cancelAuctionStatuses: {
      contractApprove: 'Approve contract',
      checkingContractApproved: 'Verifying if the contract is already approved',
      approveContractInput: 'Interact with your wallet to approve the auction smart contract',
      approveContractConfirmation: 'Awaiting for the blockchain confirmation',
      approveContractError: 'An error occurred while trying to approve the auction smart contract',
      approveContractAvailable: 'Smart contract approved',
      deleteAuction: 'Cancel auction',
      deleteAuctionInput: 'Interact with your wallet to cancel the auction',
      deleteAuctionConfirmation: 'Awaiting for the blockchain confirmation',
      deleteAuctionError: 'An error occurred while trying to cancel the auction',
      deleteAuctionDeleted: 'Auction canceled successfully',
      returnAuction: 'Get your NFT back',
      returnError: "You didn't get the NFT back",
      returnConfirm: 'Getting your NFT back! The prodigal son of the arts.',
      returnSuccess: 'NFT successfully caught back!',
      returnSuccesText: "Admire your art because it's yours again",
      returnAuctionInput: 'To get your NFT back, approve it in your wallet.',
      returnAuctionConfirmation: 'Awaiting for the blockchain confirmation',
      returnAuctionError: "We couldn't get your NFT back because you declined the action in your wallet.",
      returnAuctionDeleted: 'NFT successfully retrieved',
    },
    claimBidBackStatuses: {
      contractApprove: 'Approve contract',
      checkingContractApproved: 'Verifying if the contract is already approved',
      approveContractInput: 'Interact with your wallet to approve the auction smart contract',
      approveContractConfirmation: 'Awaiting for the blockchain confirmation',
      approveContractError: 'An error occurred while trying to approve the auction smart contract',
      approveContractAvailable: 'Smart contract approved',
      claimBidBack: 'Claim BidBack',
      claimBidBackInput: 'Interact with your wallet to claim the BidBack',
      claimBidBackConfirmation: 'Awaiting for the blockchain confirmation',
      claimBidBackError: 'An error occurred while trying to claim the BidBack',
      claimedBidBackSuccessfully: 'BidBack value successfully withdrawn!',
    },
    claimPirsStatuses: {
      contractApprove: 'Approve contract',
      checkingContractApproved: 'Verifying if the contract is already approved',
      approveContractInput: 'Interact with your wallet to approve the auction smart contract',
      approveContractConfirmation: 'Awaiting for the blockchain confirmation',
      approveContractError: 'An error occurred while trying to approve the auction smart contract',
      approveContractAvailable: 'Smart contract approved',
      claimPirs: 'Claim PIRS',
      claimPirsInput: 'Interact with your wallet to claim the PIRS',
      claimPirsConfirmation: 'Awaiting for the blockchain confirmation',
      claimPirsError: 'An error occurred while trying to claim the PIRS',
      claimedPirsSuccessfully: 'PIRS value successfully withdrawn!',
    },
    claimBidBack: 'Claim BidBack',
    claimPirs: 'Claim PIRS',
  },
  editProfile: {
    title: 'Edit profile',
    name: 'Display name',
    email: 'Email (public information to contact you):',
    custom: 'Custom URL',
    webSite: 'Website or portfolio:',
    bio: 'How about talking a little about yourself?',
    chooseFile: 'Choose File',
    sMedia: 'Social media',
    sChanges: 'Save changes',
    erroBio: 'Description" must be less than or equal to 1000 characters',
    erroName: 'Field name is required and must be less than 32 characters',
    erroEmail: 'Invalid email. Enter an existing email address',
  },
  gallery: {
    title: 'Collection',
    navigator: {
      galleryBtn: 'Gallery',
      onSaleBtn: 'On sale',
      likedBtn: 'Liked',
      pirsBtn: 'PIRS',
      bidBackBtn: 'BidBack',
    },
    noItemsPersonal: {
      galleryMsg: "Ohh! üòî You don't have any items yet. Why not mint your first artwork?",
      onSaleMsg1: "You don't have any artwork for sale yet!",
      onSaleMsg2: '(May I know why? ü§®)',
      likedMsg: 'Oops! No art around here. Who will be the lucky one to be appreciated here first? ',
      pirsMsg: 'Oh üòî nothing around here? How do you want to be a big name in the art world?',
      bidBackMsg: 'Oh üòî nothing around here? How do you want to be a big name in the art world? ',
    },
    btnName: {
      goToAuction: 'Go to auction',
      stakeAlgop: 'Stake ALGOP',
      btnView: 'View Art',
    },
    loadMore: '{msg}',
    gwei: 'Gwei',
    expressions: 'Expressions',
    msgErrorLike: 'The action could not be completed successfully. Please, try again',
    monero: 'Monero',
    myPainting: 'My Painting',
    newPainting: 'New Painting',
    bidBackTab: {
      lastBid: 'Last Bid',
      auctionStatuses: {
        youWon: 'You won!',
        youAreLosing: 'You are losing!',
        youLost: 'You lost this time',
        auctionEnded: 'AuctionEnded',
      },
      harvestMsg: 'Withdrawal of the winnings will only be available when the winner or seller performs the withdrawal.',
      harvest: 'Withdraw',
      stakedAlgop: 'ALGOP stake',
      withdrawAmount: 'You can withdraw {amount} ALGOP of BidBack',
      bidBack: 'BidBack',
      bidBackBtn: 'BidBack Share',
      bidBackSimulatorBtn: 'Simulator',
      symbol: '#',
      earned: 'Prize earned',
    },
    pirsTab: {
      pirs: 'PIRS',
      btnPirs: 'PIRS Share',
      lastBids: 'Last Bid',
      auctionStatuses: {
        youWon: 'You won!',
        youAreLosing: 'You are losing!',
        youLost: 'You lost this time',
        auctionEnded: 'AuctionEnded',
        lastText: 'There is no bid so far',
      },
      harvest: 'Withdraw',
      harvestMsg: 'Withdrawal of the winnings will only be available when the winner or seller performs the withdrawal.',
      stakedAlgop: 'ALGOP stake',
      withdrawAmount: 'You can withdraw {amount} ALGOP of PIRS',
      pirsSimulatorBtn: 'Simulator',
      symbol: '#',
      earned: 'Prize earned',
      lastText: 'There is no bid so far',
    },
  },
  viewArt: {
    title: 'Art',
    goGallery: 'Go to Gallery',
    details: 'Details',
    algoPainter: 'AlgoPainter',
    owner: 'Owner',
    description: 'Description',
    btnCreatepainter: ' I want to create a painting like that!',
    download: 'Download the raw painting',
    chooseBackground: 'Do you want to see in other environment?',
    parameters: 'Parameters',
    text: 'Text: ',
    randomColor: 'Apply random color inversion: ',
    probability: 'Define the collor inversion probability: ',
    inspiration: 'Inspiration: ',
    exhibition: 'Exhibition: ',
    technique: 'Technique: ',
    mint: 'Minted for ',
    algop: '$ALGOP',
    yes: 'Yes',
    no: 'No',
    created: 'Created by : ',
  },
  bid: {
    title: 'Bids',
    congratulations: 'Congratulations, you won the auction for this artwork. Now, claim your NFT and add it to your gallery.',
    youWon: 'You won!',
    claim: 'Claim artwork',
    winBid: 'Winning bid',
    auctionEnd: 'Auction ended',
    auctionTime: 'Auction ends in ',
    at: 'At',
    year: 'Year',
    days: 'Days',
    hours: 'Hours',
    minis: 'Mins',
    seconds: 'Secs',
    noBids: 'No bids here yet.',
    goingOnce: 'Going once, going twice, sold!',
    outbid: 'Outbid',
    win: "You're winning!",
    yourBid: 'Your Bid',
    yourLastBid: 'Your Last Bid',
    bidAgain: 'Bid again',
    bidWithdraw: 'Withdraw my bid',
    removeBid: 'Remove my bid',
    of: ',',
  },
  stackModalAlgop: {
    title: 'Stake ALGOP',
    stake: 'Stake',
    balance: 'Balance',
    max: 'Max',
    noAlgop: 'No ALGOP to stake.',
    cancel: 'Cancel',
    confirm: 'Confirm',
    interact: 'Approve the stake in your wallet.',
    error: 'An error occurred while staking',
    confirmWallet: 'Awaiting for the blockchain confirmation',
    stakeSucess: 'The stake was done successfully.',
  },
  unstackModalAlgop: {
    title: 'Unstake ALGOP',
    unstake: 'Unstake',
    balance: 'Balance',
    max: 'Max',
    noAlgop: 'No ALGOP to unstake.',
    cancel: 'Cancel',
    confirm: 'Confirm',
    interact: 'Approve the stake in your wallet.',
    error: 'An error occurred while unstaking',
    confirmWallet: 'Awaiting for the blockchain confirmation',
    stakeSucess: 'The unstake was done successfully.',
  },
};
